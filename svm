import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from matplotlib.colors import ListedColormap

df = pd.read_csv("user_data.csv")

X = df.drop(["User ID", "Gender", "Purchased"], axis=1).values
Y = df["Purchased"].values
  
from sklearn.model_selection import train_test_split
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2)
  
from sklearn.preprocessing import StandardScaler
ss = StandardScaler()
X_train = ss.fit_transform(X_train)
X_test = ss.transform(X_test)
  
from sklearn.svm import SVC
model = SVC()
model.fit(X_train,Y_train)
Y_pred = model.predict(X_test)

from sklearn.metrics import classification_report, accuracy_score, confusion_matrix
cm = confusion_matrix(Y_test, Y_pred)
print(cm)
cr = classification_report(Y_test, Y_pred)
print(cr)
acc = accuracy_score(Y_test, Y_pred)
print(acc)

def plot_decision_tree(classifier, X, y, title, xlabel, ylabel):
    x1_min,x1_max = X[:, 0].min(), X[:, 0].max()
    x2_min,x2_max = X[:, 1].min(), X[:, 1].max()
    
    x1, x2 = np.meshgrid(np.arange(x1_min, x1_max, 0.01), np.arange(x2_min, x2_max, 0.01))
    
    preds = classifier.predict(np.c_[x1.ravel(), x2.ravel()]).reshape(x1.shape)
    
    plt.contourf(x1, x2, preds, alpha=0.5, cmap=ListedColormap(["purple", "green"]))
    
    for i,j in enumerate(np.unique(y)):
        plt.scatter(X[y==j, 0], X[y==j, 1], c = ListedColormap(["purple", "green"])(i), label = f"Class {j}")
    
    plt.title(title)
    plt.xlabel(xlabel)
    plt.ylabel(ylabel)
    plt.show()
      
plot_decision_tree(model, X_train, Y_train, "Knn Training", "Age", "EstimatedSalary")
plot_decision_tree(model, X_test, Y_test, "Knn Testing", "Age", "EstimatedSalary")   
